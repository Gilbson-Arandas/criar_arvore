class Arvore {
    constructor(value, left = null, right = null) {
        this.value = value;
        this.left = left;
        this.right = right;
    }

    insert(value) {
        if (value > this.value) {
            if (this.right) {
                this.right.insert(value)
            } else {
                this.right = new Arvore(value)
            }
        } else {
            if (this.left) {
                this.left.insert(value)
            } else {
                this.left = new Arvore(value)
            }
        }
    }

    remove(value, parent = null) {
        if (value > this.value) {
            if (this.right) {
                this.right.remove(value, this)
            }
        } else if (value < this.value) {
            if (this.left) {
                this.left.remove(value, this)
            }
        } else {
            if (this.left && this.right) {
                this.value = this.right.getMinValue()
                this.right.remove(this.value, this)
            } else if (!parent) {
                if (this.left) {
                    this.value = this.left.value
                    this.right = this.left.right
                    this.left = this.left.left
                } else if (this.right) {
                    this.value = this.right.value
                    this.right = this.right.right
                    this.left = this.right.left
                }
            } else if (parent.left === this) {
                parent.left = this.left ? this.left : this.right
            } else if (parent.right === this) {
                parent.right = this.right ? this.right : this.left
            }
        }
    }

    getMinValue() {
        if (this.left) {
            return this.left.getMinValue()
        }
        return this.value
    }
}